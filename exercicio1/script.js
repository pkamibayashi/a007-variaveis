
// **a)** Declare uma variÃ¡vel para armazenar um **nome**, sem atribuir um valor.

// **b)** Declare uma variÃ¡vel para armazenar uma **idade**, sem atribuir um valor.

let nome = null
let idade = null

// **c)** Imprima na tela o **tipo** dessas variÃ¡veis que acabou de criar, usando o comando `typeof`.

console.log(typeof nome, typeof idade);

// **d)** Reflita: por que esse tipo foi impresso? Escreva a resposta em um comentÃ¡rio de cÃ³digo.

//  -----> Ã‰ um bug que acompanha o  Javascript desde a primeira versÃ£o do mesmo (http://2ality.com/2013/10/typeof-null.html)

// **e)** Depois, disso, atualize o cÃ³digo para **perguntar** ao usuÃ¡rio seu nome e sua idade, atribuindo esses dois valores Ã s variÃ¡veis que acabou de criar.

nome = prompt('Qual Ã© Seu nome?');
idade = Number(prompt ('Qual Ã© sua idade?'));


// >ğŸ’¡Se vocÃª receber um erro de cÃ³digo nessa etapa, reflita sobre o tipo de declaraÃ§Ã£o que utilizou.
    

// **f)** Novamente, imprima na tela o tipo dessas variÃ¡veis. O que vocÃª notou? Escreva em um comentÃ¡rio de cÃ³digo.
console.log(typeof nome, typeof idade);

// **g)** Para finalizar, imprima na tela a mensagem: "OlÃ¡ `nome`,  vocÃª tem `idade` anos". Onde `nome` e `idade` sÃ£o os valores que o usuÃ¡rio inseriu
console.log (`OlÃ¡ ${nome},  vocÃª tem ${idade} anos.`);
// >ğŸ’¡  Dica: para imprimir mais de um valor na mesma linha, vocÃª pode usar essa sintaxe:
// ```jsx
// console.log(valor1, valor2)
// ```
    